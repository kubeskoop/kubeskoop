"use strict";(self.webpackChunkkubeskoop_io=self.webpackChunkkubeskoop_io||[]).push([[8647],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},k=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),s=c(t),k=r,m=s["".concat(p,".").concat(k)]||s[k]||u[k]||i;return t?o.createElement(m,l(l({ref:n},d),{},{components:t})):o.createElement(m,l({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=k;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[s]="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}k.displayName="MDXCreateElement"},2677:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const i={sidebar_position:2},l="\u6dfb\u52a0\u65b0\u63d2\u4ef6",a={unversionedId:"contribute/connectivity-diagnosis/new-plugin",id:"contribute/connectivity-diagnosis/new-plugin",title:"\u6dfb\u52a0\u65b0\u63d2\u4ef6",description:"\u672c\u8282\u9610\u8ff0\u4e86\u5982\u4f55\u4e3aKubeSkoop\u8bca\u65ad\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u652f\u6301\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/contribute/connectivity-diagnosis/new-plugin.md",sourceDirName:"contribute/connectivity-diagnosis",slug:"/contribute/connectivity-diagnosis/new-plugin",permalink:"/zh/docs/contribute/connectivity-diagnosis/new-plugin",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u67b6\u6784",permalink:"/zh/docs/contribute/connectivity-diagnosis/architecture"},next:{title:"\u6dfb\u52a0\u65b0\u4e91\u63d0\u4f9b\u5546",permalink:"/zh/docs/contribute/connectivity-diagnosis/new-cloud-provider"}},p={},c=[{value:"\u5b9e\u73b0 <code>Plugin</code>",id:"\u5b9e\u73b0-plugin",level:2},{value:"\u5b9e\u73b0 <code>Network</code>",id:"\u5b9e\u73b0-network",level:2},{value:"\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u7c7b\u578b\u5e76\u5728<code>Provider</code>\u4e2d\u521b\u5efa",id:"\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u7c7b\u578b\u5e76\u5728provider\u4e2d\u521b\u5efa",level:2},{value:"\u6dfb\u52a0\u63d2\u4ef6\u81ea\u52a8\u63a2\u6d4b",id:"\u6dfb\u52a0\u63d2\u4ef6\u81ea\u52a8\u63a2\u6d4b",level:2},{value:"\u6dfb\u52a0e2e\u6d4b\u8bd5",id:"\u6dfb\u52a0e2e\u6d4b\u8bd5",level:2}],d={toc:c},s="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u6dfb\u52a0\u65b0\u63d2\u4ef6"},"\u6dfb\u52a0\u65b0\u63d2\u4ef6"),(0,r.kt)("p",null,"\u672c\u8282\u9610\u8ff0\u4e86\u5982\u4f55\u4e3aKubeSkoop\u8bca\u65ad\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u652f\u6301\u3002"),(0,r.kt)("h2",{id:"\u5b9e\u73b0-plugin"},"\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"h2"},"Plugin")),(0,r.kt)("p",null,"\u6240\u6709\u63d2\u4ef6\u7684\u5b9e\u73b0\u90fd\u4f4d\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/plugin"),"\u3002"),(0,r.kt)("p",null,"\u63d2\u4ef6\u5e94\u5f53\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"Plugin"),"\u63a5\u53e3\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type Plugin interface {\n    CreatePod(pod *k8s.Pod) (model.NetNodeAction, error)\n    CreateNode(node *k8s.NodeInfo) (model.NetNodeAction, error)\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"CreatePod()"),": \u63a5\u53d7",(0,r.kt)("inlineCode",{parentName:"p"},"*k8s.Pod"),"\u4f5c\u4e3a\u53c2\u6570\uff0c\u521b\u5efa\u5bf9\u5e94\u7684Pod\u5b9e\u73b0\uff0c\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"NetNodeAction"),"\u7c7b\u578b\u8fd4\u56de\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"CreateNode()"),": \u63a5\u53d7",(0,r.kt)("inlineCode",{parentName:"p"},"*k8s.NodeInfo"),"\u4f5c\u4e3a\u53c2\u6570\uff0c\u521b\u5efa\u5bf9\u5e94\u7684Node\u5b9e\u73b0\uff0c\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"NetNodeAction"),"\u8fd4\u56de\u3002"))),(0,r.kt)("p",null,"\u4f60\u5e94\u5f53\u6839\u636e\u4f60\u7684\u63d2\u4ef6\uff0c\u4e3aPod\u548cNode\u63d0\u4f9b\u76f8\u5e94\u7684\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NetNodeAction"),"\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type NetNodeAction interface {\n    Send(dst Endpoint, protocol Protocol) ([]Transmission, error)\n    Receive(upstream *Link) ([]Transmission, error)\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Send()"),"\u4ee3\u8868\u4ece\u8282\u70b9\u4e0a\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5305\u3002\u63a5\u53d7\u76ee\u7684\u7aef\u70b9\u4ee5\u53ca\u534f\u8bae\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de",(0,r.kt)("inlineCode",{parentName:"li"},"[]Transsmision"),"\u4f5c\u4e3a\u7ed3\u679c\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Receive()"),"\u4ee3\u8868\u5728\u8282\u70b9\u4e0a\u63a5\u53d7\u4e00\u4e2a\u6570\u636e\u5305\u3002\u63a5\u53d7",(0,r.kt)("inlineCode",{parentName:"li"},"*Link"),"\u7c7b\u578b\u7684\u4e0a\u6e38\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de",(0,r.kt)("inlineCode",{parentName:"li"},"[]Transsmision"),"\u4f5c\u4e3a\u7ed3\u679c\u3002")),(0,r.kt)("p",null,"\u4f7f\u7528veth\u7f51\u5361\u5bf9\u4f5c\u4e3aPod\u7684\u7f51\u7edc\u63a5\u53e3\u662f\u4e00\u79cd\u5f88\u5e38\u89c1\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"newSimpleVethPod()"),"\uff0c\u76f4\u63a5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"simpleVethPod"),"\u4f5c\u4e3aPod\u7684\u5b9e\u73b0\u3002\u6bd4\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func (f *flannelPlugin) CreatePod(pod *k8s.Pod) (model.NetNodeAction, error) {\n    return newSimpleVEthPod(pod, f.ipCache, f.podMTU, "eth0")\n}\n')),(0,r.kt)("p",null,"\u5bf9\u4e8eNode\u7684\u5b9e\u73b0\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5224\u65ad\u7f51\u7edc\u7aef\u70b9\u7684\u7c7b\u578b\uff08Pod\u3001Node\u3001Service\u8fd8\u662fExternal\uff09\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"BasePluginNode"),"\u4f5c\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"NetNodeAction"),"\u7684\u5b9e\u73b0\uff0c\u5e76\u4e14\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"SimplePluginNode"),"\u63a5\u53e3\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type SimplePluginNode interface {\n    ToPod(upstream *model.Link, dst model.Endpoint, protocol model.Protocol, pod *v1.Pod) ([]model.Transmission, error)\n    ToHost(upstream *model.Link, dst model.Endpoint, protocol model.Protocol, node *v1.Node) ([]model.Transmission, error)\n    ToService(upstream *model.Link, dst model.Endpoint, protocol model.Protocol, service *v1.Service) ([]model.Transmission, error)\n    ToExternal(upstream *model.Link, dst model.Endpoint, protocol model.Protocol) ([]model.Transmission, error)\n    Serve(upstream *model.Link, dst model.Endpoint, protocol model.Protocol) ([]model.Transmission, error)\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SimplePluginNode"),"\u5df2\u7ecf\u6839\u636e\u7aef\u70b9\u7c7b\u578b\u5bf9\u52a8\u4f5c\u8fdb\u884c\u4e86\u5206\u7c7b\u3002\u4ee5Flannel\u63d2\u4ef6\u7684\u5b9e\u73b0\u4e3e\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (f *flannelPlugin) CreateNode(node *k8s.NodeInfo) (model.NetNodeAction, error) {\n    flannelHost, err := newFlannelHost(f.ipCache, node, f.infraShim, f.serviceProcessor, f.hostOptions)\n    if err != nil {\n        return nil, err\n    }\n    return &BasePluginNode{\n        NetNode:          flannelHost.netNode,\n        IPCache:          f.ipCache,\n        SimplePluginNode: flannelHost,\n    }, nil\n}\n")),(0,r.kt)("p",null,"\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u7528\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"IPCache"),"\u6216",(0,r.kt)("inlineCode",{parentName:"p"},"NetsatckAssertion"),"\u7b49\u5de5\u5177\u6765\u5e2e\u52a9\u4f60\u83b7\u5f97\u67d0\u4e2a\u8d44\u6e90\u7684\u4fe1\u606f\uff0c\u6216\u662f\u68c0\u67e5\u7f51\u7edc\u914d\u7f6e\u662f\u5426\u6b63\u786e\u3002\u5173\u4e8e\u6b64\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003Flannel\u63d2\u4ef6\u7684\u7684\u5b9e\u73b0\uff0c\u4f4d\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/plugin/flannel.go"),"\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u9700\u8981\u4e3a\u4f60\u7684\u63d2\u4ef6\u6dfb\u52a0\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u4f60\u9700\u8981\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"ConfigBinder"),"\uff0c\u5e76\u5c06\u5176\u6ce8\u518c\u5230\u7a0b\u5e8f\u4e2d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'type CalicoConfig struct {\n    PodMTU     int\n    IPIPPodMTU int\n    Interface  string\n}\n\nfunc (c *CalicoConfig) BindFlags(fs *pflag.FlagSet) {\n    fs.StringVarP(&c.Interface, "calico-host-interface", "", "eth0",\n        "Host interface for calico plugin.")\n    fs.IntVarP(&c.PodMTU, "calico-pod-mtu", "", 1500,\n        "Pod MTU for calico plugin. Pod interface MTU in BGP mode.")\n    fs.IntVarP(&c.IPIPPodMTU, "calico-ipip-pod-mtu", "", 1480,\n        "Pod MTU for calico plugin. Pod interface MTU in IPIP mode.")\n}\n\nfunc (c *CalicoConfig) Validate() error {\n    return nil\n}\n\nvar Calico = &CalicoConfig{}\n\nfunc init() {\n    ctx.RegisterConfigBinder("Calico plugin", Calico)\n}\n')),(0,r.kt)("h2",{id:"\u5b9e\u73b0-network"},"\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"h2"},"Network")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Network")," \u4f4d\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/network"),"\u4e2d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type Network interface {\n    Diagnose(ctx *ctx.Context, src model.Endpoint, dst model.Endpoint) ([]model.Suspicion, *model.PacketPath, error)\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Diagnose()"),": \u63a5\u53d7",(0,r.kt)("inlineCode",{parentName:"li"},"*ctx.Context"),"\u3001",(0,r.kt)("inlineCode",{parentName:"li"},"*model.Endpoint"),"\u7c7b\u578b\u7684\u6e90\u548c\u76ee\u7684\u5730\u5740\uff0c\u8fd4\u56de ",(0,r.kt)("inlineCode",{parentName:"li"},"[]model.Suspicion")," \u548c",(0,r.kt)("inlineCode",{parentName:"li"},"*model.PacketPath"),"\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Network"),"\u662f\u4e91\u63d0\u4f9b\u5546\u7279\u5b9a\u7684\uff0c\u7279\u5b9a\u7684\u5b9e\u73b0\u4f4d\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/network/<\u63d0\u4f9b\u5546\u540d\u79f0>/"),"."),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u7684\u63d2\u4ef6\u652f\u6301\u8be5\u63d0\u4f9b\u5546\uff0c\u4f60\u5c31\u9700\u8981\u4e3a\u5176\u6dfb\u52a0",(0,r.kt)("inlineCode",{parentName:"p"},"Network"),"\u7684\u5b9e\u73b0\u3002\u7f51\u7edc\u7c7b\u578b",(0,r.kt)("inlineCode",{parentName:"p"},"generic"),"\u4ee3\u8868\u4efb\u610f\u4e91\u63d0\u4f9b\u5546\uff0c\u6240\u4ee5\u4f60\u81f3\u5c11\u4e3a\u8fd9\u4e2a\u7f51\u7edc\u7c7b\u578b\u63d0\u4f9b\u4f60\u7684\u63d2\u4ef6\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Network"),"\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Plugin"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"NetNodeManager"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"NetworkPolicy"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"service.Processor"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"Diagnostor"),"\u4f1a\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Network"),"\u521b\u5efa\u65f6\u88ab\u914d\u7f6e\u597d\u3002\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func NewFlannelNetwork(ctx *ctx.Context) (network.Network, error) {\n    serviceProcessor := service.NewKubeProxyServiceProcessor(ctx)\n\n    plgn, err := plugin.NewFlannelPlugin(ctx, serviceProcessor, nil)\n    if err != nil {\n        return nil, err\n    }\n\n    collectorManager, err := manager.NewSimplePodCollectorManager(ctx)\n    if err != nil {\n        return nil, err\n    }\n\n    netNodeManager, err := nodemanager.NewNetNodeManager(ctx, plgn, collectorManager)\n    if err != nil {\n        return nil, err\n    }\n\n    networkPolicy, err := plugin.NewNetworkPolicy(false, false, ctx.ClusterConfig().IPCache, ctx.KubernetesClient(), serviceProcessor)\n    if err != nil {\n        return nil, err\n    }\n\n    diagnostor, err := skoop.NewDefaultDiagnostor(ctx, netNodeManager, networkPolicy)\n    if err != nil {\n        return nil, err\n    }\n\n    return &flannelNetwork{\n        plugin:           plgn,\n        diagnostor:       diagnostor,\n        collectorManager: collectorManager,\n        netNodeManager:   netNodeManager,\n    }, nil\n}\n")),(0,r.kt)("h2",{id:"\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u7c7b\u578b\u5e76\u5728provider\u4e2d\u521b\u5efa"},"\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u7c7b\u578b\u5e76\u5728",(0,r.kt)("inlineCode",{parentName:"h2"},"Provider"),"\u4e2d\u521b\u5efa"),(0,r.kt)("p",null,"\u63d2\u4ef6\u7c7b\u578b\u7684\u5b9a\u4e49\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/context/cluster.go"),"\u4e2d\u3002\u4f60\u5e94\u5f53\u5728\u8fd9\u91cc\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    NetworkPluginFlannel  = "flannel"\n    NetworkPluginCalico   = "calico"\n    NetworkPluginTerway   = "terway"\n    // \u5728\u8fd9\u91cc\u6dfb\u52a0\u65b0\u7684\u63d2\u4ef6\u7c7b\u578b\n)\n')),(0,r.kt)("p",null,"\u5728\u8fd9\u4e4b\u540e\uff0c\u4f60\u8fd8\u9700\u8981\u4e3a\u6240\u652f\u6301\u7684\u4e91\u63d0\u4f9b\u5546\u521b\u5efa\u4f60\u7684\u63d2\u4ef6\uff0c\u6587\u4ef6\u4f4d\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/skoop/provider/<\u63d0\u4f9b\u5546\u540d\u79f0>.go"),"\u3002\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func (g genericProvider) CreateNetwork(ctx *context.Context) (network.Network, error) {\n    switch ctx.ClusterConfig().NetworkPlugin {\n    case context.NetworkPluginFlannel:\n        return generic.NewFlannelNetwork(ctx)\n    case context.NetworkPluginCalico:\n        return generic.NewCalicoNetwork(ctx)\n    // add your plugin type\n    default:\n        return nil, fmt.Errorf("not support cni type %q", ctx.ClusterConfig().NetworkPlugin)\n    }\n}\n')),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u6307\u5b9a",(0,r.kt)("inlineCode",{parentName:"p"},"--network plugin <\u63d2\u4ef6\u540d>"),"\u6765\u4f7f\u7528\u4f60\u7684\u63d2\u4ef6\u3002"),(0,r.kt)("h2",{id:"\u6dfb\u52a0\u63d2\u4ef6\u81ea\u52a8\u63a2\u6d4b"},"\u6dfb\u52a0\u63d2\u4ef6\u81ea\u52a8\u63a2\u6d4b"),(0,r.kt)("p",null,"\u4f60\u53ef\u4ee5\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"pkg/utils/k8s.go"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"DetectNetworkPlugin()"),"\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7\u904d\u5386\u96c6\u7fa4\u4e2d\u7684DaemonSet\u7684\u65b9\u5f0f\u6765\u6dfb\u52a0\u63d2\u4ef6\u7c7b\u578b\u7684\u81ea\u52a8\u63a2\u6d4b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func DetectNetworkPlugin(k8sCli *kubernetes.Clientset) (networkMode string, err error) {\n    dss, err := k8sCli.AppsV1().DaemonSets("").List(context.Background(), metav1.ListOptions{})\n    if err != nil {\n        return "", err\n    }\n    for _, ds := range dss.Items {\n        switch ds.Name {\n        case "kube-flannel-ds":\n            return "flannel", nil\n        case "calico-node":\n            return "calico", nil\n        case "terway-eniip":\n            return "terway-eniip", nil\n        }\n    }\n    return "", nil\n}\n')),(0,r.kt)("h2",{id:"\u6dfb\u52a0e2e\u6d4b\u8bd5"},"\u6dfb\u52a0e2e\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u4f60\u5e94\u5f53\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"test/skoop/e2e/testcase/plugins.go"),"\u4e2d\u6dfb\u52a0\u63d2\u4ef6\u76f8\u5173\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u4e14\u5c06\u4f60\u7684\u63d2\u4ef6\u6dfb\u52a0\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"test/skoop/e2e/testcase/testcases.go"),"\u6587\u4ef6\u4e2d\u3002"))}u.isMDXComponent=!0}}]);