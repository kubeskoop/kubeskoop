"use strict";(self.webpackChunkkubeskoop_io=self.webpackChunkkubeskoop_io||[]).push([[4581],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),f=o,y=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return t?r.createElement(y,a(a({ref:n},p),{},{components:t})):r.createElement(y,a({ref:n},p))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2992:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:0},a="Supported Network Plugins",l={unversionedId:"reference/connectivity-diagnosis/network-plugins",id:"reference/connectivity-diagnosis/network-plugins",title:"Supported Network Plugins",description:"The following network plugins are implemented by KubeSkoop connectivity diagnosis.",source:"@site/docs/reference/connectivity-diagnosis/network-plugins.md",sourceDirName:"reference/connectivity-diagnosis",slug:"/reference/connectivity-diagnosis/network-plugins",permalink:"/docs/reference/connectivity-diagnosis/network-plugins",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Connectivity Diagnosis",permalink:"/docs/category/connectivity-diagnosis-1"},next:{title:"Specifying Cloud Provider",permalink:"/docs/reference/connectivity-diagnosis/cloud-providers"}},c={},s=[{value:"Flannel",id:"flannel",level:2},{value:"Calico",id:"calico",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supported-network-plugins"},"Supported Network Plugins"),(0,o.kt)("p",null,"The following network plugins are implemented by KubeSkoop connectivity diagnosis."),(0,o.kt)("h2",{id:"flannel"},"Flannel"),(0,o.kt)("p",null,"Type ",(0,o.kt)("inlineCode",{parentName:"p"},"host-gw")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"vxlan")," are supported for Flannel cluster, and will auto detect which type should be used in diagnose."),(0,o.kt)("h2",{id:"calico"},"Calico"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"BGP")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"IPIP")," mode are supported for Flannel cluster, and will auto detect which type should be used in diagnose."),(0,o.kt)("p",null,"Note: ",(0,o.kt)("strong",{parentName:"p"},"Calico API Server")," should be installed in cluster to run connectivity diagnosis. For more information please see ",(0,o.kt)("a",{parentName:"p",href:"https://projectcalico.docs.tigera.io/maintenance/install-apiserver"},"Calico documentation"),"."))}d.isMDXComponent=!0}}]);