"use strict";(self.webpackChunkkubeskoop_io=self.webpackChunkkubeskoop_io||[]).push([[8075],{3905:(e,o,t)=>{t.d(o,{Zo:()=>a,kt:()=>g});var n=t(7294);function i(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function p(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?p(Object(t),!0).forEach((function(o){i(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,n,i=function(e,o){if(null==e)return{};var t,n,i={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],o.indexOf(t)>=0||(i[t]=e[t]);return i}(e,o);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var k=n.createContext({}),s=function(e){var o=n.useContext(k),t=o;return e&&(t="function"==typeof e?e(o):r(r({},o),e)),t},a=function(e){var o=s(e.components);return n.createElement(k.Provider,{value:o},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var t=e.components,i=e.mdxType,p=e.originalType,k=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=i,g=d["".concat(k,".").concat(u)]||d[u]||c[u]||p;return t?n.createElement(g,r(r({ref:o},a),{},{components:t})):n.createElement(g,r({ref:o},a))}));function g(e,o){var t=arguments,i=o&&o.mdxType;if("string"==typeof e||i){var p=t.length,r=new Array(p);r[0]=u;var l={};for(var k in o)hasOwnProperty.call(o,k)&&(l[k]=o[k]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<p;s++)r[s]=t[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6850:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>k,contentTitle:()=>r,default:()=>c,frontMatter:()=>p,metadata:()=>l,toc:()=>s});var n=t(7462),i=(t(7294),t(3905));const p={sidebar_position:2},r="Code Overview",l={unversionedId:"contribute/code-overview",id:"contribute/code-overview",title:"Code Overview",description:"Here's an overview for KubeSkoop's code architecture, including code directory structure of KubeSkoop diagnosis & KubeSkoop exporter.",source:"@site/docs/contribute/code-overview.md",sourceDirName:"contribute",slug:"/contribute/code-overview",permalink:"/docs/contribute/code-overview",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Extend KubeSkoop",permalink:"/docs/contribute/extend-kubeskoop"},next:{title:"Connectivity Diagnosis",permalink:"/docs/category/connectivity-diagnosis-2"}},k={},s=[{value:"High level",id:"high-level",level:2},{value:"bpf",id:"bpf",level:3},{value:"cmd",id:"cmd",level:3},{value:"deploy",id:"deploy",level:3},{value:"docs",id:"docs",level:3},{value:"pkg",id:"pkg",level:3},{value:"rpc",id:"rpc",level:3},{value:"test",id:"test",level:3},{value:"KubeSkoop diagnosis",id:"kubeskoop-diagnosis",level:2},{value:"cmd/skoop",id:"cmdskoop",level:3},{value:"cmd/collector",id:"cmdcollector",level:3},{value:"pkg/skoop/cmd",id:"pkgskoopcmd",level:3},{value:"pkg/skoop/assertions",id:"pkgskoopassertions",level:3},{value:"pkg/skoop/collector",id:"pkgskoopcollector",level:3},{value:"pkg/skoop/context",id:"pkgskoopcontext",level:3},{value:"pkg/skoop/infra",id:"pkgskoopinfra",level:3},{value:"pkg/skoop/k8s",id:"pkgskoopk8s",level:3},{value:"pkg/skoop/model",id:"pkgskoopmodel",level:3},{value:"pkg/skoop/netstack",id:"pkgskoopnetstack",level:3},{value:"pkg/skoop/network",id:"pkgskoopnetwork",level:3},{value:"pkg/skoop/nodemanager",id:"pkgskoopnodemanager",level:3},{value:"pkg/skoop/plugin",id:"pkgskoopplugin",level:3},{value:"pkg/skoop/provider",id:"pkgskoopprovider",level:3},{value:"pkg/skoop/service",id:"pkgskoopservice",level:3},{value:"pkg/skoop/skoop",id:"pkgskoopskoop",level:3},{value:"pkg/skoop/ui",id:"pkgskoopui",level:3},{value:"pkg/skoop/utils",id:"pkgskooputils",level:3}],a={toc:s},d="wrapper";function c(e){let{components:o,...t}=e;return(0,i.kt)(d,(0,n.Z)({},a,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"code-overview"},"Code Overview"),(0,i.kt)("p",null,"Here's an overview for KubeSkoop's code architecture, including code directory structure of KubeSkoop diagnosis & KubeSkoop exporter."),(0,i.kt)("h2",{id:"high-level"},"High level"),(0,i.kt)("h3",{id:"bpf"},"bpf"),(0,i.kt)("p",null,"The eBPF code and headers used by exporter."),(0,i.kt)("h3",{id:"cmd"},"cmd"),(0,i.kt)("p",null,"CLI programs."),(0,i.kt)("h3",{id:"deploy"},"deploy"),(0,i.kt)("p",null,"Helm charts and manifests for deploying KubeSkoop."),(0,i.kt)("h3",{id:"docs"},"docs"),(0,i.kt)("p",null,"Documentation."),(0,i.kt)("h3",{id:"pkg"},"pkg"),(0,i.kt)("p",null,"Common go packages."),(0,i.kt)("h3",{id:"rpc"},"rpc"),(0,i.kt)("p",null,"gRPC definitions used by exporter."),(0,i.kt)("h3",{id:"test"},"test"),(0,i.kt)("p",null,"E2E tests."),(0,i.kt)("h2",{id:"kubeskoop-diagnosis"},"KubeSkoop diagnosis"),(0,i.kt)("h3",{id:"cmdskoop"},"cmd/skoop"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"skoop")," command."),(0,i.kt)("h3",{id:"cmdcollector"},"cmd/collector"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"collector")," command."),(0,i.kt)("h3",{id:"pkgskoopcmd"},"pkg/skoop/cmd"),(0,i.kt)("p",null,"Main logic of ",(0,i.kt)("inlineCode",{parentName:"p"},"skoop")," CLI command."),(0,i.kt)("h3",{id:"pkgskoopassertions"},"pkg/skoop/assertions"),(0,i.kt)("p",null,"Assertion type definitions and common assertion utils, including ",(0,i.kt)("inlineCode",{parentName:"p"},"kubernetes")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"netstack"),"."),(0,i.kt)("h3",{id:"pkgskoopcollector"},"pkg/skoop/collector"),(0,i.kt)("p",null,"Definitions and implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"collector")," command and ",(0,i.kt)("inlineCode",{parentName:"p"},"CollectorManager")," ."),(0,i.kt)("h3",{id:"pkgskoopcontext"},"pkg/skoop/context"),(0,i.kt)("p",null,"Runtime context of the program, providing cluster or task information for the diagnosis. It also provides command flags parsing, and allow other package to register their flags."),(0,i.kt)("h3",{id:"pkgskoopinfra"},"pkg/skoop/infra"),(0,i.kt)("p",null,"Implementation of cloud providers."),(0,i.kt)("h3",{id:"pkgskoopk8s"},"pkg/skoop/k8s"),(0,i.kt)("p",null,"Definitions and utilities for components of Kubernetes cluster."),(0,i.kt)("h3",{id:"pkgskoopmodel"},"pkg/skoop/model"),(0,i.kt)("p",null,"Definitions of models used for diagnosis, including ",(0,i.kt)("inlineCode",{parentName:"p"},"Packet"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Link"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Action"),", etc."),(0,i.kt)("h3",{id:"pkgskoopnetstack"},"pkg/skoop/netstack"),(0,i.kt)("p",null,"Definitions and parser of Linux network stack, like route, IPVS, and iptables simulation."),(0,i.kt)("h3",{id:"pkgskoopnetwork"},"pkg/skoop/network"),(0,i.kt)("p",null,"Implementations of ",(0,i.kt)("inlineCode",{parentName:"p"},"Network")," ."),(0,i.kt)("h3",{id:"pkgskoopnodemanager"},"pkg/skoop/nodemanager"),(0,i.kt)("p",null,"Implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"NetNodeManager")),(0,i.kt)("h3",{id:"pkgskoopplugin"},"pkg/skoop/plugin"),(0,i.kt)("p",null,"Implementations of ",(0,i.kt)("inlineCode",{parentName:"p"},"Plugin"),", including ",(0,i.kt)("inlineCode",{parentName:"p"},"flannel"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"calico"),", etc."),(0,i.kt)("h3",{id:"pkgskoopprovider"},"pkg/skoop/provider"),(0,i.kt)("p",null,"Implementations of ",(0,i.kt)("inlineCode",{parentName:"p"},"Provider"),", including ",(0,i.kt)("inlineCode",{parentName:"p"},"generic"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"aliyun"),", etc."),(0,i.kt)("h3",{id:"pkgskoopservice"},"pkg/skoop/service"),(0,i.kt)("p",null,"Implementations of ",(0,i.kt)("inlineCode",{parentName:"p"},"ServiceProcessor"),", including ",(0,i.kt)("inlineCode",{parentName:"p"},"kube-proxy"),"."),(0,i.kt)("h3",{id:"pkgskoopskoop"},"pkg/skoop/skoop"),(0,i.kt)("p",null,"Implementations of ",(0,i.kt)("inlineCode",{parentName:"p"},"Diagnostor"),"."),(0,i.kt)("h3",{id:"pkgskoopui"},"pkg/skoop/ui"),(0,i.kt)("p",null,"Output formatter and Web UI."),(0,i.kt)("h3",{id:"pkgskooputils"},"pkg/skoop/utils"),(0,i.kt)("p",null,"Utilities."))}c.isMDXComponent=!0}}]);