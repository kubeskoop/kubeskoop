"use strict";(self.webpackChunkkubeskoop_io=self.webpackChunkkubeskoop_io||[]).push([[8334],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=o.createContext({}),s=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(d.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),l=s(t),m=a,f=l["".concat(d,".").concat(m)]||l[m]||u[m]||r;return t?o.createElement(f,i(i({ref:n},c),{},{components:t})):o.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=m;var p={};for(var d in n)hasOwnProperty.call(n,d)&&(p[d]=n[d]);p.originalType=e,p[l]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8587:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=t(7462),a=(t(7294),t(3905));const r={sidebar_position:7},i="Running in Sidecar Mode",p={unversionedId:"guide/running-in-sidecar",id:"guide/running-in-sidecar",title:"Running in Sidecar Mode",description:"For some reasons, you may want to only collect metrics from a certain subset of pods in the cluster, or when using secure containers such as Kata Container, which is not possible to directly collect pod metrics on node.",source:"@site/docs/guide/running-in-sidecar.md",sourceDirName:"guide",slug:"/guide/running-in-sidecar",permalink:"/docs/guide/running-in-sidecar",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Latency Detection",permalink:"/docs/guide/latency-detection"},next:{title:"Reference",permalink:"/docs/category/reference"}},d={},s=[{value:"Example",id:"example",level:2},{value:"Limitations",id:"limitations",level:2}],c={toc:s},l="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-in-sidecar-mode"},"Running in Sidecar Mode"),(0,a.kt)("p",null,"For some reasons, you may want to only collect metrics from a certain subset of pods in the cluster, or when using secure containers such as ",(0,a.kt)("a",{parentName:"p",href:"https://katacontainers.io/"},"Kata Container"),", which is not possible to directly collect pod metrics on node."),(0,a.kt)("p",null,"In these cases, you can enable ",(0,a.kt)("strong",{parentName:"p"},"sidecar mode")," for KubeSkoop. You need to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add Agent to target pod as a sidecar container."),(0,a.kt)("li",{parentName:"ul"},"Add ",(0,a.kt)("inlineCode",{parentName:"li"},"--sidecar")," flag to command."),(0,a.kt)("li",{parentName:"ul"},"Pass Pod and Node information via environment variables.")),(0,a.kt)("p",null,"By adding ",(0,a.kt)("inlineCode",{parentName:"p"},"--sidecar")," to command flags, you can run KubeSkoop in sidecar mode, which will only collect network info in current namespace."),(0,a.kt)("p",null,"In this case, KubeSkoop will fetch metric labels(pod name/namespace, node name) from environment variables. You should pass the correct values to them via ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/workloads/pods/downward-api/"},"Downward API"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Environment Variable Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"INSPECTOR_NODENAME"),(0,a.kt)("td",{parentName:"tr",align:null},"Node name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"INSPECTOR_PODNAME"),(0,a.kt)("td",{parentName:"tr",align:null},"Pod name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"INSPECTOR_PODNAMESPACE"),(0,a.kt)("td",{parentName:"tr",align:null},"Pod namespace")))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"This example shows how to run an nginx deployment with KubeSkoop exporter sidecar."),(0,a.kt)("p",null,"Save the yaml manifests below and apply to your Kubernetes cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-with-exporter\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx-with-exporter\n  template:\n    metadata:\n      labels:\n        app: nginx-with-exporter\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n      # add KubeSkoop sidecar container\n      - name: exporter\n        image: kubeskoop/agent:latest\n        imagePullPolicy: Always\n        command:\n          - /bin/inspector\n          - server\n          # enable sidecar mode\n          - --sidecar\n        volumeMounts:\n          - name: config-volume\n            mountPath: /etc/config\n        env:\n          # set node name, pod name/namespace from env\n          - name: INSPECTOR_NODENAME\n            valueFrom:\n              fieldRef:\n                apiVersion: v1\n                fieldPath: spec.nodeName\n          - name: INSPECTOR_PODNAME\n            valueFrom:\n              fieldRef:\n                apiVersion: v1\n                fieldPath: metadata.name\n          - name: INSPECTOR_PODNAMESPACE\n            valueFrom:\n              fieldRef:\n                apiVersion: v1\n                fieldPath: metadata.namespace\n        ports:\n        - containerPort: 9012\n      volumes:\n        - configMap:\n            defaultMode: 420\n            name: kubeskoop-config\n          name: config-volume\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kubeskoop-config\ndata:\n  config.yaml: |-\n    debugmode: true\n    port: 9102\n    metrics:\n      probes:\n      - name: netdev\n      - name: io\n      - name: sock\n      - name: tcpsummary\n      - name: tcp\n      - name: tcpext\n      - name: udp\n")),(0,a.kt)("p",null,"This will create a Deployment ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx-with-exporter")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," namespace, along with ConfigMap ",(0,a.kt)("inlineCode",{parentName:"p"},"kubeskoop-config"),"."),(0,a.kt)("p",null,"When pod started, you can get metrics from pod via ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get --raw /api/v1/namespaces/default/pods/{{kubeskoop pod name}}:9102/proxy/metrics\n")),(0,a.kt)("p",null,"The output should be like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},'# HELP inspector_pod_ioioreadbytes io ioioreadbytes count in netns/pod\n# TYPE inspector_pod_ioioreadbytes gauge\ninspector_pod_ioioreadbytes{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 4096\n# HELP inspector_pod_ioioreadsyscall io ioioreadsyscall count in netns/pod\n# TYPE inspector_pod_ioioreadsyscall gauge\ninspector_pod_ioioreadsyscall{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 3765\n# HELP inspector_pod_ioiowritebytes io ioiowritebytes count in netns/pod\n# TYPE inspector_pod_ioiowritebytes gauge\ninspector_pod_ioiowritebytes{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 4096\n# HELP inspector_pod_ioiowritesyscall io ioiowritesyscall count in netns/pod\n# TYPE inspector_pod_ioiowritesyscall gauge\ninspector_pod_ioiowritesyscall{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 26578\n# HELP inspector_pod_netdevrxbytes netdev netdevrxbytes count in netns/pod\n# TYPE inspector_pod_netdevrxbytes gauge\ninspector_pod_netdevrxbytes{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 2139\n# HELP inspector_pod_netdevrxdropped netdev netdevrxdropped count in netns/pod\n# TYPE inspector_pod_netdevrxdropped gauge\ninspector_pod_netdevrxdropped{namespace="default",node="node1",pod="nginx-with-exporter-66fb94cbfc-4bxf5",target_namespace="default",target_node="node1",target_pod="nginx-with-exporter-66fb94cbfc-4bxf5"} 0\n# ...and more\n')),(0,a.kt)("h2",{id:"limitations"},"Limitations"),(0,a.kt)("p",null,"For now, probes based on eBPF are not supported in sidecar mode."))}u.isMDXComponent=!0}}]);