"use strict";(self.webpackChunkkubeskoop_io=self.webpackChunkkubeskoop_io||[]).push([[6184],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),k=u(n),c=a,m=k["".concat(p,".").concat(c)]||k[c]||d[c]||o;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[k]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},l="Install KubeSkoop exporter",i={unversionedId:"guide/exporter/exporter_installation",id:"guide/exporter/exporter_installation",title:"Install KubeSkoop exporter",description:"Dependencies",source:"@site/docs/guide/exporter/exporter_installation.md",sourceDirName:"guide/exporter",slug:"/guide/exporter/exporter_installation",permalink:"/docs/guide/exporter/exporter_installation",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"KubeSkoop exporter visualization",permalink:"/docs/guide/exporter/exporter-visualization-guide"},next:{title:"Running KubeSkoop exporter in sidecar mode",permalink:"/docs/guide/exporter/running-in-sidecar"}},p={},u=[{value:"Dependencies",id:"dependencies",level:2},{value:"Quick Installation",id:"quick-installation",level:2},{value:"Quickly experience",id:"quickly-experience",level:3},{value:"Install only KubeSkoop exporter",id:"install-only-kubeskoop-exporter",level:3},{value:"Install using Helm",id:"install-using-helm",level:2},{value:"Helm Configuration",id:"helm-configuration",level:3},{value:"Verification after installation completion",id:"verification-after-installation-completion",level:3},{value:"Configuration",id:"configuration",level:2}],s={toc:u},k="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"install-kubeskoop-exporter"},"Install KubeSkoop exporter"),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Linux kernel >= 4.9.17 \uff08Some functions can be supported on lower versions of the kernel.\uff09"),(0,a.kt)("li",{parentName:"ul"},"Containers runtime based on Docker/Containerd/Pouch.")),(0,a.kt)("h2",{id:"quick-installation"},"Quick Installation"),(0,a.kt)("h3",{id:"quickly-experience"},"Quickly experience"),(0,a.kt)("p",null,"KubeSkoop exporter provides a quick deployment configuration that includes the following components:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"KubeSkoop exporter."),(0,a.kt)("li",{parentName:"ul"},"Single-instance Prometheus and Grafana components, Grafana Loki component."),(0,a.kt)("li",{parentName:"ul"},"NodePort services of Prometheus and Grafana.")),(0,a.kt)("p",null,"The following steps show how to quickly deploy KubeSkoop exporter and its observability combination with Prometheus, Grafana, and Loki in a Kubernetes cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/alibaba/kubeskoop/main/deploy/skoopbundle.yaml\n")),(0,a.kt)("p",null,"Follow the steps below to confirm the installation is complete and obtain the access entry:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Check the running status of kubeskoop exporter.\nkubectl get pod -n kubeskoop -l app=kubeskoop-exporter -o wide\n\n# Check the running status of the Probe collector.\nkubectl get --raw /api/v1/namespaces/kubeskoop/pods/{{kubeskoop-exporter pod name}}:9102/proxy/status |jq .\n\n# Obtain the entry for the Prometheus service.\nkubectl get service -n kubeskoop prometheus-service -o wide\n\n# Obtain the access entry for the Grafana console.\nkubectl get service -n kubeskoop grafana -o wide\n")),(0,a.kt)("h3",{id:"install-only-kubeskoop-exporter"},"Install only KubeSkoop exporter"),(0,a.kt)("h2",{id:"install-using-helm"},"Install using Helm"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Add kubeskoop charts repo\nhelm repo add kubeskoop https://kubeskoop.github.io\n\n# On the first execution, it is necessary to update the Helm repo cache.\nhelm repo update\n\n# Install kubeskoop exporter\nhelm install kubeskoop-exporter kubeskoop/skoop-exporter\n")),(0,a.kt)("p",null,"If you need to debug Helm Charts information, you can install it locally:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Get the KubeSkoop exporter code.\ngit clone https://github.com/alibaba/kubeskoop.git\n\nhelm install --set namespace=kube-system skoop-exporter ./kubeskoop/deploy/skoop-exporter-0.1.0.tgz --debug\n")),(0,a.kt)("p",null,"KubeSkoop exporter is deployed in the cluster as a DaemonSet and can be verified if it is working properly in the following ways:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Check the running status of kubeskoop exporter.\nkubectl get pod -n kubeskoop -l app=kubeskoop-exporter -o wide\n\n# Check the running status of the Probe collector.\nkubectl get --raw /api/v1/namespaces/kubeskoop/pods/{{kubeskoop-exporter pod name}}:9102/proxy/status |jq .\n\n\n# If you have direct access to the kubeskoop exporter instance, you can also directly check the status of the Probe's operation.\ncurl {{kubeskoop-exporter pod ip}}:9102/status |jq .\n")),(0,a.kt)("h3",{id:"helm-configuration"},"Helm Configuration"),(0,a.kt)("p",null,"The parameters that can be configured when installing KubeSkoop exporter through Helm are as follows:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Setting"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"name"),(0,a.kt)("td",{parentName:"tr",align:null},"kubeskoop-exporter daemonset name"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"kubeskoop-exporter"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"namespace"),(0,a.kt)("td",{parentName:"tr",align:null},"The namespace of kubeskoop-exporter workload"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"kubeskoop"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"debugmode"),(0,a.kt)("td",{parentName:"tr",align:null},"Enable the debugmode of kubeskoop-exporter, with debug interface, debug log level and pprof support"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"appName"),(0,a.kt)("td",{parentName:"tr",align:null},"Pod  ",(0,a.kt)("inlineCode",{parentName:"td"},"app")," label"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"kubeskoop-exporter"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runtimeEndpoint"),(0,a.kt)("td",{parentName:"tr",align:null},"CRI runtime endpoint socket, you can use  `crictl info"),(0,a.kt)("td",{parentName:"tr",align:null},"awk -F\":\" '/containerdEndpoint/ {print $2'` to obtain it")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.enableEventServer"),(0,a.kt)("td",{parentName:"tr",align:null},"Enable the event server"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.enableMetricServer"),(0,a.kt)("td",{parentName:"tr",align:null},"Enable the metric server"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"true"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.remoteLokiAddress"),(0,a.kt)("td",{parentName:"tr",align:null},"Set the remote grafana loki endpoint to push events"),(0,a.kt)("td",{parentName:"tr",align:null},"``")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.metricLabelVerbose"),(0,a.kt)("td",{parentName:"tr",align:null},"Deliever the detail information of pod in metric label, such as app label, ip"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.metricServerPort"),(0,a.kt)("td",{parentName:"tr",align:null},"Metric server port, provide HTTP service"),(0,a.kt)("td",{parentName:"tr",align:null},"9102")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.eventServerPort"),(0,a.kt)("td",{parentName:"tr",align:null},"Event  sever port, provide GRPC service"),(0,a.kt)("td",{parentName:"tr",align:null},"19102")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.metricProbes"),(0,a.kt)("td",{parentName:"tr",align:null},"Metric probes to enable"),(0,a.kt)("td",{parentName:"tr",align:null},"refer to the probe guide")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.eventProbes"),(0,a.kt)("td",{parentName:"tr",align:null},"Event probes to enable"),(0,a.kt)("td",{parentName:"tr",align:null},"refer to the probe guide")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config.metricCacheInterval"),(0,a.kt)("td",{parentName:"tr",align:null},"Metric cache interval"),(0,a.kt)("td",{parentName:"tr",align:null},"15")))),(0,a.kt)("h3",{id:"verification-after-installation-completion"},"Verification after installation completion"),(0,a.kt)("p",null,"After completing the installation of KubeSkoop exporter using Helm, you can verify if it is running correctly in the following ways:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Check the running status of the Probe collector.\nkubectl get --raw /api/v1/namespaces/kubeskoop/pods/{{kubeskoop-exporter pod name}}:9102/proxy/status |jq .\n")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The configuration of KubeSkoop exporter is managed by the ConfigMap object 'inspector-config' by default in the same namespace as the workload. The following methods can be used to modify it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Change the namespace to the actual effective namespace.\nkubectl edit cm -n kubeskoop inspector-config\n")),(0,a.kt)("p",null,"The configuration items supported by KubeSkoop exporter are as follows:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Configuration item"),(0,a.kt)("th",{parentName:"tr",align:null},"Configuration function"),(0,a.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"debugmode"),(0,a.kt)("td",{parentName:"tr",align:null},"Debug mode switch. After turning on debug mode, you can obtain more detailed logs and enable pprof and gops interfaces."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"event_config.loki_enable"),(0,a.kt)("td",{parentName:"tr",align:null},"The switch to push event collection service to Grafana Loki."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"event_config.loki_address"),(0,a.kt)("td",{parentName:"tr",align:null},"After enabling the event collection service, configure the Grafana Loki service address where the events need to be pushed through this option."),(0,a.kt)("td",{parentName:"tr",align:null},"``")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"event_config.probes"),(0,a.kt)("td",{parentName:"tr",align:null},"Configure the enabled event collection probes."),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"event_config.port"),(0,a.kt)("td",{parentName:"tr",align:null},"The GRPC server port of KubeSkoop exporter provides event streaming service."),(0,a.kt)("td",{parentName:"tr",align:null},"19102")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"metric_config.verbose"),(0,a.kt)("td",{parentName:"tr",align:null},"Get more detailed monitoring metric labels, including the app label and IP address of the Pod."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"false"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"metric_config.port"),(0,a.kt)("td",{parentName:"tr",align:null},"The port of the monitoring metric service that provides HTTP service."),(0,a.kt)("td",{parentName:"tr",align:null},"9102")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"metric_config.probes"),(0,a.kt)("td",{parentName:"tr",align:null},"Configure the enabled monitoring metric probes."),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"metric_config.interval"),(0,a.kt)("td",{parentName:"tr",align:null},"The caching period for collecting monitoring metrics, measured in seconds."),(0,a.kt)("td",{parentName:"tr",align:null},"15")))),(0,a.kt)("p",null,"Reference information for the selectable probe configuration can be found at",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/guide/exporter/exporter-description"},"KubeSkoop exporter Introduction"))))}d.isMDXComponent=!0}}]);